# Action's main info
name: "Packj Audit"
description: "Use Packj to identify malicious and other \"risky\" open-source software dependencies"

# Action's author name
author: "Ossillate, Inc."

# Action's branding data for GitHub Marketplace
branding:
  icon: "package" # icon name from Feather open source icons pack
  color: "orange"

on: [pull_request]

permissions:
  contents: read
  
inputs: 
  REPO_TOKEN:
    required: true
  DEPENDENCY_FILES:
    required: true
    
runs:
  using: composite
  steps: 

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout repo
      uses: actions/checkout@v3

    # Audit deps
    - name: Auditing deps with Packj
      shell: bash
      run: |
        input=$(echo "${{ inputs.DEPENDENCY_FILES }}" | sed 's/,/ /g') 
        input_files=()
        for item in $input
          do
            if [[ $item == *":"* ]]; then
              pm_name=$(echo $item | cut -f1 -d:)
              dep_file=$(echo $item | cut -f2 -d:)
              path=${{ github.workspace }}/$dep_file
              if [ -f $path ]; then
                input_files+=$pm_name":"$path,
              fi
            fi
          done
        if [ ! -z input_files ]; then
          input=$(echo $input_files | sed 's/,/ /g')
          pip3 install pyOpenSSL --upgrade && pip3 install packj && packj audit -f $input
        fi
 
    # Analyze report
    - name: Analyze audit report
      shell: bash
      run: |
        echo "COMMENT_BODY<<EOF" >> $GITHUB_ENV
        if [ -f /tmp/packj_audit_*/*.html ]; then
          html_report=$(ls /tmp/packj_audit_*/*.html)
          cat $html_report | head -n -2 | tail -n +10 | sed 's/^[\s\t\r]*//g' >> $GITHUB_ENV
        else
          echo "<h4>Failed to perform Packj audit! Refer to workflow run for details</h4>" >> /$GITHUB_ENV
        fi
        run_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        commit_link="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
        echo "Created by <a href=$run_url>workflow run ${{ github.run_number }}</a> on commit <a href=$commit_link>${{ github.sha }}</a>"  >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    # Comment on the PR
    - name: Comment PR
      if: ${{ github.head_ref }}
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: ${{ env.COMMENT_BODY }}
        GITHUB_TOKEN: ${{ inputs.REPO_TOKEN }}
